import { ApolloClient, ApolloLink, InMemoryCache, gql } from "@apollo/client";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";

import styles from "../styles/Home.module.css";

interface HomeProps {
  projects: {
    id: string;
    attributes: {
      title: string;
    };
  }[];
}

const Home = ({ projects }: HomeProps): JSX.Element => {
  console.log(projects);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {projects.map((project, key) => {
        return <div key={key}>{project.attributes.title}</div>;
      })}
    </div>
  );
};

export default Home;

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: "http://localhost:1337/graphql",
    cache: new InMemoryCache(),
    connectToDevTools: true,
  });

  const { data } = await client.query({
    query: gql`
      query getProjects {
        projects {
          data {
            id
            attributes {
              title
            }
          }
        }
      }
    `,
  });

  return {
    props: {
      projects: data.projects.data,
    },
  };
}
